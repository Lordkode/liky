generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  email     String   @unique
  username  String   @unique
  password  String
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  likes     Like[]
  comments  Comment[]

  @@map("users")
}

model Image {
  id        String   @id @default(uuid())
  url       String   @unique
  title     String?
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  likes     Like[]
  comments  Comment[]

  @@map("images")
}

model Like {
  id        String   @id @default(uuid())
  imageId   String   @map("image_id")
  userId    String   @map("user_id")
  createdAt DateTime @default(now()) @map("created_at")
  image     Image    @relation(fields: [imageId], references: [id], onDelete: Cascade)
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([userId, imageId])
  @@map("likes")
}

model Comment {
  id        String   @id @default(uuid())
  content   String
  imageId   String   @map("image_id")
  userId    String   @map("user_id")
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  image     Image    @relation(fields: [imageId], references: [id], onDelete: Cascade)
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("comments")
}
